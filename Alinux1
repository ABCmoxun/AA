
Linux命令的格式：
  命令名 [选项] [参数]
命令 --help 选项   查看命令选项
man 命令          查看命令帮助
 history          查看历史命令
ex:ls --help ;	man ls 	;history

(#!/usr/bin/python3)
pwd 命令：
  作用：用于显示当前操作的路径位置（当前工作路径）
 cd -  # 进入到进入此目录前的那个目录
 ls 路径  -选项		ex: ls -a /

科学计数方法
小数 E/F(符号)指数
ex:3.2E/-2;  1.2E/2

tree   显示目录树
ex:  tree /home/tarena/

rm    删除文件或者文件夹
ex: rm -r /home/tarena/
cp    复制文件或文件夹
mv   文件搬移或者更名(剪切)

find   根据文件名称等信息查找指定的文件
find 路径 -name "文件名"   ex: find / -name "day01.txt"
grep   查找文件中相应的内容及文本信息
 grep "内容" [选项] 文件名或文件夹
-n   显示行号 ;  -r   递归搜索文件夹内的文件

tar  对文件或文件夹进行打包和解包的操作
  tar [选项] 文件名或路径
-c         创建包(打包);  -x    解包
-f 文件名   操作的文件名;   -v   显示操作的文件细节
-z    用gzip/gunzip对包进行压缩和解压缩（注意顺序）

解包一般用：tar -xzf 路径文件    tar -xf 路径文件 

chmod    用来修改文件权限
 chmod 权限 文件名/文件夹名
chmod x(用户)+权限 文件名/文件夹名  + 加权限  ;  - 去除权限
ex:chmod u+r   a.txt

输出重定向     输出分两种:
 1. 标准输出 ;  2. 标准错误输出
标准输出重定向
  >   将一个命令的标准输出重定向到指定文件
  >>  将一个命令的标准输出追加到指定文件末尾
标准错误输出重定向:
  2>   将一个命令的错误信息重定向到指定文件
  2>>  将一个命令的错误信息追加到指定文件
ex:find / -name "gzip"  2>  /dev/null
重定向所有输出:
  &>
  &>>
  作用：
    将所有输出重定向到一个文件中
 del 删除变量
在python3中
help(函数名)   --q键退出
 not

day3
 字符串

 字符串字面值中 用字符反斜杠\ 后跟一些字符代表特殊的一个字符
raw 字符串  r' '
str(obj='')   将对象转换为字符串  s=str()
 x > y 比较大小   in/not in  字符串的索引 
index 字符串[整数表达式] str[x]
切片 字符串[(开始索引b):(结束索引e)(:(步长s))]

字符串编码转换函数
  ord(c)   返回一个字符的Unicode值
  chr(i)   返回i这个值所对应的字符
day4

S.strip() 返回去掉左右空白字符的字符串
S.replace(old, new[, count])将原字符串的old用new代替，生成一个新的字符串
%s 	字符串 ; %d 	十进制整数
%% 	等同于一个%字符
占位符 % 和类型码之间的格式语法:
  % [格式语法] 类型码(d,s,f等)
  - 左对齐 ;    #默认左对齐 
  + 显示正负号；
   0 补零; 
   宽度; 
   宽度.精度

ex:
"%.2f" %3.1415926535897932  # '3.14'
"%7.2f" % 3.1415926535897932 # '   3.14'

列表(day6)
list中join函数
  ''.join(l)  #列表中的元素必须是字符串
  
  del 序列[切片]
  L.index(x [begin,end])
  L.append(x) 	向列表中追加单个元素
  L.insert(index, x) 	将某个元素插放到列表中指定的位置
  l1.extend(l2)  # 结果只是一个列表，元素不是列表
  L.remove(x)  从列表中删除第一次出现在列表中的值
  del L[index]  删除一个或多个元素
  L.pop([index]) 删除索引对应的元素，如果不加索引，默认删除最后元素，同时返回删除元素的引用关系
   列表推导式 [表达式  for 变量 in 可迭代对象]

 元组,字典(day7)
  元组不可变类型
  元组满足索引
 添加/修改字典元素
    字典[键] = 值对象
  D.clear() 	清空字典
  del 字典[键]
  D.pop(key) 移除键，同时返回此键所对应的值
  D.get(key, default) 	返回键key所对应的值,如果没有此键，则返回default
  D.keys() 	  返回可迭代的 dict_keys 集合对象
  D.values()   返回可迭代的 dict_values 值对象
  D.items()    返回可迭代的 dict_items 对象

  集合(day8)
     可变集合和固定集合 
  1、& 生成两个集合的交集
  2、| 生成两个集合的并集
  3、- 生成两个集合的补集
  s1 - s2   # {x,} #生成属性s1但不属于s2的所有元素的集合
  4、^ 生成两个集合的对称补集
  5、> 判断一个集合是另一个集合的超集(#包含)
  6、< 判断一个集合是别一个集合的子集 (#属于)
   集合推导式 
    { 表达式 for 变量 in 可迭代对象 [if 真值表达式]}

   S.add(x) 	在集合中添加一个新的元素e；如果元素已经存在，则不添加
   S.remove(x) 	从集合中删除一个元素，如果元素不存在于集合中，则会产生一个KeyError错误
   S.discard(e) 	从集合S中移除一个元素e;
  S.clear() 	清空集合内的所有元素
  S.copy() 	将集合进行一次浅拷贝
   S.pop() 	从集合S中删除一个随机元素;如果此集合为空，则引发KeyError异常
   S.update(s2) 	用 S与s2得到的全集更新变量S



















































