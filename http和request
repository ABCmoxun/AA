
http协议（超文本传输协议）

HTTP协议是 超文本传输协议的缩写,是用于从万维网服务器传输超文本到本地浏览器的传送协议。
HTTP是一个基于TCP/IP通信协议来传递数据（HTML 文件, 图片文件, 查询结果等）

网站访问流程
1.客户端（浏览器）发起http请求
2.传输层使用tcp协议建立连接，层层打包将请求内容发送给服务器
3.web服务器解包后解析http请求，交后端应用程序处理
4.后端应用得到结果，通过web服务器回发个前端

用途:  网站中网页的传输和数据传输，也可用作基于http协议的编程传输数据
特点:  应用层协议，传输层使用tcp连接
      简单，灵活，接口使用方便
	  几乎支持所有的数据类型
	  是无状态的
	  http1.1  持续连接

请求（request）
格式: 
请求行     确定具体的请求类型
请求头     对请求内容的信息描述
空行
请求正文   具体请求参数
请求行 ： GET       /index.html   HTTP/1.1
          请求方法  请求资源      协议版本
请求方法: (8种)
	 GET     获取网络资源
     POST    提交一定的附加数据，得到返回结果
	 HEAD    获取响应的头信息
	 PUT     获取服务器资源
	 DELETE  删除服务器资源
	 TRACE   用于测试
	 CONNECT  保留方法
	 OPTIONS  请求获取服务器性能和信息

请求头：
	选项: 值

响应（response）
格式：
响应行     反馈响应的情况
响应头     对响应的具体描述
空行
响应体     具体返回给用户的内容
响应行 ：  HTTP/1.1   200     OK
           协议版本   响应码  信息
1xx   提示信息，表示请求已经接收，正在处理
2xx   请求响应成功
3xx   重定向，完成任务需要其他操作
4xx   客户端错误
5xx   服务端错误

200  成功
400  客户端请求语法有误，服务器不理解
401  没有访问权限，请求未经授权
403  服务器收到请求， 但是拒绝提供服务
404  资源不存在
500  服务器发生未知错误
503  服务器暂时无法执行

响应头 格式同请求头
响应体: 文件，图片。


requests库的7个主要方法
	requests()	#构造请求，支撑以下各种方法的基础方法
	get()		#获取HTML网页的主要方法
	post()		#向网页提交POST请求的方法
	head()		#获取HTML网页头信息的方法
	put()		#向HTML网页提交PUT请求的方法
	patch()		#向HTML网页提交局部修改请求
	delete()	#向HTML网页提交删除请求






















